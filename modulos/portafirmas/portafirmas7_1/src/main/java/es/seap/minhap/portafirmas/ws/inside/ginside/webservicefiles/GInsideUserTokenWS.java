/* Copyright (C) 2012-13 MINHAP, Gobierno de Espa√±a
   This program is licensed and may be used, modified and redistributed under the terms
   of the European Public License (EUPL), either version 1.1 or (at your
   option) any later version as soon as they are approved by the European Commission.
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
   or implied. See the License for the specific language governing permissions and
   more details.
   You should have received a copy of the EUPL1.1 license
   along with this program; if not, you may find it at
   http://joinup.ec.europa.eu/software/page/eupl/licence-eupl */

package es.seap.minhap.portafirmas.ws.inside.ginside.webservicefiles;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2018-10-18T14:28:04.848+02:00
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "GInsideUserTokenWS", 
                  wsdlLocation = "file:/C:/Users/amatacas/AppData/Local/Temp/tempdir4999016629808460672.tmp/GInsideUserTokenService_1.wsdl",
                  targetNamespace = "https://ssweb.seap.minhap.es/Inside/XSD/v1.0/WebService") 
public class GInsideUserTokenWS extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://ssweb.seap.minhap.es/Inside/XSD/v1.0/WebService", "GInsideUserTokenWS");
    public final static QName GInsideUserTokenWSPort = new QName("https://ssweb.seap.minhap.es/Inside/XSD/v1.0/WebService", "GInsideUserTokenWSPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/amatacas/AppData/Local/Temp/tempdir4999016629808460672.tmp/GInsideUserTokenService_1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(GInsideUserTokenWS.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/amatacas/AppData/Local/Temp/tempdir4999016629808460672.tmp/GInsideUserTokenService_1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public GInsideUserTokenWS(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public GInsideUserTokenWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GInsideUserTokenWS() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns GInsideUserTokenWebService
     */
    @WebEndpoint(name = "GInsideUserTokenWSPort")
    public GInsideUserTokenWebService getGInsideUserTokenWSPort() {
        return super.getPort(GInsideUserTokenWSPort, GInsideUserTokenWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GInsideUserTokenWebService
     */
    @WebEndpoint(name = "GInsideUserTokenWSPort")
    public GInsideUserTokenWebService getGInsideUserTokenWSPort(WebServiceFeature... features) {
        return super.getPort(GInsideUserTokenWSPort, GInsideUserTokenWebService.class, features);
    }

}
